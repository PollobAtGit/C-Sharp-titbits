<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<!--File's name could have been different. i.e other than '.csproj'-->
    <PropertyGroup>
        <!--
            Properties can be over-written from command line while executing MSBuild by using option '/p'. Syntax is as follows:
                MSBuild project_file_name.csproj /p:PROPERY_NAME=NEW_VALUE
        -->
        <AssemblyName>HelloWorldSample</AssemblyName>
        <OutputPath>Bin\</OutputPath>
    </PropertyGroup>
    <ItemGroup>
        <Compile Include="helloworld.cs" />
    </ItemGroup>
    <Target Name="Build" Inputs="@(Compile)" Outputs="$(OutputPath)$(AssemblyName).exe" >
        <MakeDir Directories="$(OutputPath)" Condition="!Exists('$(OutputPath)')" />
        <Csc Sources="@(Compile)" OutputAssembly="$(OutputPath)$(AssemblyName).exe" >
            <Output TaskParameter = "OutputAssembly" ItemName = "EXEFileName" />
            <!--
                'Output' is only applicable for those parameter's of a task that are marked for 'output'
                It won't work for parameters such as 'Sources' of 'Csc' because 'Sources' is not
                marked for output but 'OutputAssembly' is
            -->
        </Csc>
        <!-- Above task generates a command line command as follows:
                csc.exe /out:Bin\HelloWorldSample.exe helloworld.cs
        -->
        <Message Text="The output file is @(EXEFileName)"/>
    </Target>
    <Target Name="Clean">
        <Delete Files="$(OutputPath)$(AssemblyName).exe" />
    </Target>
    <Target Name="ReBuild" DependsOnTargets="Clean;Build" />
</Project>