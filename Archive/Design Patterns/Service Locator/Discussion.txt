
# How to define a interface with generic types?

# In a class/interface following functions doesn't cause any conflict, they are properly overloaded:

	object GetService(Type svcType);
	TService GetService<TService>(Type svcType);

	Cmwk: How does Generic plays a role here?

# For Generics if Type constraint is specified as 'class' then that means the Type parameter can be
	## Concrete Class
	## Interface
	## Delegate
	## Array Type

	Cmwk: When might someone need to use Delegate & Array Type as Type parameter?

# What is explicit interface implementation? What's the purpose? Note that in explicit interface implementation,
	keyword 'public' isn't allowed at all which indicates the implementation's purpose is to be private.

# What's the difference between "(TService)(new NotificationService())" & "new NotificationService() as TService" ?

# What is Type ?
	## An abstract class

# Can extension methods be written for an interface?

# Why weekly typed SL is flexible than strongly typed SL?